{"version":3,"sources":["Components/Floor.js","api/firebase.js","App.js","index.js"],"names":["Floor","receiveShadow","rotation","Math","PI","position","args","attach","color","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","ref","listAll","then","res","prefixes","forEach","folderRef","console","log","items","itemRef","catch","error","Test","lazy","App","useState","nextModel","setNextModel","className","colorManagement","shadows","camera","fov","far","intensity","castShadow","fallback","OrbitControls","Loader","onClick","Date","now","ReactDOM","render","document","getElementById"],"mappings":"2OAEe,SAASA,IACtB,OACE,cAAC,IAAD,CACEC,eAAa,EACbC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAC5BC,SAAU,CAAC,GAAI,IAAK,GACpBC,KAAM,CAAC,IAAO,KAJhB,SAME,sCAAsBC,OAAO,WAAWC,MAAM,gB,kBCPpDC,IAASC,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAGMH,IAASU,UAEVC,IAAI,MAEvBC,UACAC,MAAK,SAACC,GACLA,EAAIC,SAASC,SAAQ,SAACC,GACpBC,QAAQC,IAAIF,GAEZC,QAAQC,IAAIF,MAGdH,EAAIM,MAAMJ,SAAQ,SAACK,GACjBH,QAAQC,IAAIE,SAIfC,OAAM,SAACC,OCvBV,IAAMC,EAAOC,gBAAK,kBAAM,sDAkDTC,MAhDf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,OACE,sBAAKC,UAAU,YAAf,UACE,eAAC,IAAD,CACEC,iBAAe,EACfC,SAAO,EACPC,OAAQ,CACNrC,SAAU,CAAC,GAAI,GAAI,KACnBsC,IAAK,GACLC,IAAK,KANT,UASE,qBAAKrC,OAAO,MAAMD,KAAM,CAAC,QAAS,EAAG,OACrC,8BAAcE,MAAM,UAAUqC,UAAW,KACzC,kCACEA,UAAW,GACXC,YAAU,EACVzC,SAAU,EAAE,IAAK,IAAK,KACtB,uBAAsB,KACtB,wBAAuB,KACvB,oBAAmB,IACnB,sBAAqB,IACrB,sBAAqB,IACrB,oBAAmB,IACnB,wBAAuB,MAGzB,cAAC,WAAD,CAAU0C,SAAU,KAApB,SACE,cAACd,EAAD,CAAMI,UAAWA,MAEnB,cAACW,EAAA,EAAD,IAIA,cAAChD,EAAD,OAGF,cAACiD,EAAA,EAAD,IACA,qBAAKV,UAAU,SAASW,QAxCR,WAClBZ,EAAaa,KAAKC,QAuChB,sBC9CNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1193f949.chunk.js","sourcesContent":["import { Plane } from \"@react-three/drei\";\r\n\r\nexport default function Floor() {\r\n  return (\r\n    <Plane\r\n      receiveShadow\r\n      rotation={[-Math.PI / 2, 0, 0]}\r\n      position={[0, -200, 0]}\r\n      args={[10000, 10000]}\r\n    >\r\n      <meshStandardMaterial attach=\"material\" color=\"lightgrey\" />\r\n    </Plane>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n});\r\n\r\nexport const storage = firebase.storage();\r\n\r\nvar listRef = storage.ref(\"hq\");\r\nlistRef\r\n  .listAll()\r\n  .then((res) => {\r\n    res.prefixes.forEach((folderRef) => {\r\n      console.log(folderRef);\r\n      // All the prefixes under listRef.\r\n      console.log(folderRef);\r\n      // You may call listAll() recursively on them.\r\n    });\r\n    res.items.forEach((itemRef) => {\r\n      console.log(itemRef);\r\n      // All the items under listRef.\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    // Uh-oh, an error occurred!\r\n  });\r\n","import { Suspense, useState, lazy } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Box, OrbitControls, Loader } from \"@react-three/drei\";\n// import Test from \"./Components/Test\";\nimport Floor from \"./Components/Floor\";\nimport Podium from \"./Components/Podium\";\nimport { storage } from \"./api/firebase\";\nconst Test = lazy(() => import(\"./Components/Test\"));\n\nfunction App() {\n  const [nextModel, setNextModel] = useState(false);\n  const onNextModel = () => {\n    setNextModel(Date.now());\n  };\n  return (\n    <div className=\"container\">\n      <Canvas\n        colorManagement\n        shadows\n        camera={{\n          position: [0, -50, 350],\n          fov: 40,\n          far: 10000,\n        }}\n      >\n        <fog attach=\"fog\" args={[\"white\", 0, 5000]} />\n        <ambientLight color=\"#ffffff\" intensity={0.5} />\n        <directionalLight\n          intensity={0.5}\n          castShadow\n          position={[-300, 600, 250]}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={1000}\n          shadow-camera-left={-1000}\n          shadow-camera-right={1000}\n          shadow-camera-top={1000}\n          shadow-camera-bottom={-1000}\n        />\n\n        <Suspense fallback={null}>\n          <Test nextModel={nextModel} />\n        </Suspense>\n        <OrbitControls />\n        {/* <Box position={[0, 25, 0]} args={[205, 205, 205]}>\n          <meshStandardMaterial attach=\"material\" color=\"lightgrey\" />\n        </Box> */}\n        <Floor />\n        {/* <Podium /> */}\n      </Canvas>\n      <Loader />\n      <div className=\"button\" onClick={onNextModel}>\n        Next\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}